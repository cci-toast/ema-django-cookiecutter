version: '3.7'

services:

  db:
    image: postgres
    environment:
      - POSTGRES_DB={{ cookiecutter.project_dir }}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  web:
    init: true
    build: .
    env_file:
      - .env
      - .version
    command: bash -c "gunicorn -c gunicorn.conf --log-level INFO --reload -b 0.0.0.0:8000 config.wsgi"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - elastisearch
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
      - PGHOST=db
      - PYTHONDONTWRITEBYTECODE=true
      - LOCAL_LOGGING=true
    stop_signal: SIGTERM
{% if cookiecutter.redis == 'True' %}
  redis:
    image: "redis:alpine"
{% endif -%}
{% if cookiecutter.celery == 'True' %}
  celery:
    init: true
    build: .
    command: celery -A config worker -l debug
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
      - elasticsearch
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
      - PGHOST=db
      - PYTHONDONTWRITEBYTECODE=true
      - LOCAL_LOGGING=true
    stop_signal: SIGTERM
{% endif %}
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.1.1"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - "./kibana/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    stop_signal: SIGKILL

  kibana:
    image: "docker.elastic.co/kibana/kibana:6.1.1"
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    volumes:
      - "./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml"
    stop_signal: SIGKILL
volumes:
  postgres_data:
